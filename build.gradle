buildscript {
    ext {
        springBootVersion = '2.3.4.RELEASE'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
        classpath "com.palantir.gradle.docker:gradle-docker:0.22.1"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.palantir.docker'
    apply plugin: 'war'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    // 모든 모듈에서 사용하는 라이브러리
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        compile 'mysql:mysql-connector-java'
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws', version: '2.2.1.RELEASE', ext: 'pom'
        implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.228')
        implementation 'com.amazonaws:aws-java-sdk-s3'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

    }
}

project(':clava-common') {
    // common 모듈에만 필요한 라이브러리가 발생하면 이곳에 추가한다.
    dependencies {

        implementation 'io.jsonwebtoken:jjwt-api:0.10.7'

        runtime 'io.jsonwebtoken:jjwt-impl:0.10.7'
        runtime 'io.jsonwebtoken:jjwt-jackson:0.10.7'

    }
}

project(':clava-admin-api') {
    dependencies {
        compile project(':clava-common')

        implementation 'org.springframework.boot:spring-boot-starter-security'
    }
}

project(':clava-customer-api') {
    dependencies {
        compile project(':clava-common')
        implementation 'org.springframework.boot:spring-boot-starter-security'
    }
}